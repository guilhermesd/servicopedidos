name: Build and Push Docker image to Amazon ECR

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      IMAGE_TAG: latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x' # ajuste se necessário

    - name: Install ReportGenerator tool
      run: dotnet tool install -g dotnet-reportgenerator-globaltool

    - name: Restore dependencies
      run: dotnet restore

    - name: Run tests with coverage
      run: dotnet test --collect:"XPlat Code Coverage" --results-directory ./TestResults

    - name: Convert cobertura format
      run: |
        reportgenerator \
          -reports:"**/coverage.cobertura.xml" \
          -targetdir:"coverlet/reports" \
          -reporttypes:Cobertura

    - name: Validate code coverage
      shell: pwsh
      run: |
        $minCoverage = 70
        $coverageReportPath = "coverlet/reports/Cobertura.xml"

        if (-Not (Test-Path $coverageReportPath)) {
          Write-Error "Arquivo de cobertura não encontrado em $coverageReportPath"
          exit 1
        }

        [xml]$coverageReport = Get-Content $coverageReportPath
        $coveragePercentage = $coverageReport.SelectSingleNode("//coverage").GetAttribute("line-rate")
        $coveragePercentagePerc = ([decimal]$coveragePercentage * 100)

        if ($coveragePercentagePerc -lt $minCoverage) {
            Write-Host "❌ Cobertura de código $coveragePercentagePerc% está abaixo de $minCoverage%"
            exit 1
        } else {
            Write-Host "✅ Cobertura de código $coveragePercentagePerc% está acima de $minCoverage%"
        }

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Create ECR repositories if not exist
      run: |
        aws ecr describe-repositories --repository-names servicopedidos-repo || aws ecr create-repository --repository-name servicopedidos-repo

    - name: Build Docker image
      run: |
        docker build -f Api/Dockerfile -t servicopedidos:${{ env.IMAGE_TAG }} .

    - name: Tag Docker image
      run: |
        docker tag servicopedidos:${{ env.IMAGE_TAG }} 439667737553.dkr.ecr.us-east-1.amazonaws.com/servicopedidos-repo:${{ env.IMAGE_TAG }}

    - name: Push to Amazon ECR
      run: |
        docker push 439667737553.dkr.ecr.us-east-1.amazonaws.com/servicopedidos-repo:${{ env.IMAGE_TAG }}
